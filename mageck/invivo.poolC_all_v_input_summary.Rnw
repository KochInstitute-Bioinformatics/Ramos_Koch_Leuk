% This is a template file for Sweave used in MAGeCK
% Author: Wei Li, Shirley Liu lab
% Do not modify lines beginning with "#__".
\documentclass{article}

\usepackage{amsmath}
\usepackage{amscd}
\usepackage[tableposition=top]{caption}
\usepackage{ifthen}
\usepackage{fullpage}
\usepackage[utf8]{inputenc}

\begin{document}
\setkeys{Gin}{width=0.9\textwidth}

\title{MAGeCK Comparison Report}
\author{Wei Li}

\maketitle


\tableofcontents

\section{Summary}

%Function definition
<<label=funcdef,include=FALSE,echo=FALSE>>=
genreporttable<-function(comparisons,ngenes,direction,fdr1,fdr5,fdr25){
  xtb=data.frame(Comparison=comparisons,Genes=ngenes,Selection=direction,FDR1=fdr1,FDR5=fdr5,FDR25=fdr25);
  colnames(xtb)=c("Comparison","Genes","Selection","FDR1%","FDR5%","FDR25%");
  return (xtb);
}
@

The statistics of comparisons is as indicated in the following table. 

<<label=tab1,echo=FALSE,results=tex>>=
library(xtable)
comparisons=c("1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23_vs_0 neg.","1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23_vs_0 pos.");
ngenes=c(3991,3991);
direction=c("negative","positive");
fdr1=c(332,4);
fdr5=c(354,52);
fdr25=c(690,54);

cptable=genreporttable(comparisons,ngenes,direction,fdr1,fdr5,fdr25);
print(xtable(cptable, caption = "Summary of comparisons", label = "tab:one",
    digits = c(0, 0, 0, 0, 0, 0, 0),
    table.placement = "tbp",
    caption.placement = "top"))
@

The meanings of the columns are as follows.

\begin{itemize}
\item \textbf{Comparison}: The label for comparisons;
\item \textbf{Genes}: The number of genes in the library;
\item \textbf{Selection}: The direction of selection, either positive selection or negative selection;
\item \textbf{FDR1\%}: The number of genes with FDR $<$ 1\%;
\item \textbf{FDR5\%}: The number of genes with FDR $<$ 5\%;
\item \textbf{FDR25\%}: The number of genes with FDR $<$ 25\%;
\end{itemize}

The following figures show:

\begin{itemize}
\item Individual sgRNA read counts of selected genes in selected samples; 
\item The distribution of RRA scores and p values of all genes; and
\item The RRA scores and p values of selected genes.
\end{itemize}


\newpage\section{Comparison results of 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23 vs 0 neg.}

The following figure shows the distribution of RRA score in the comparison 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23 vs 0 neg., and the RRA scores of 10 genes.

<<echo=FALSE>>=
gstable=read.table('invivo.poolC_all_v_input.gene_summary.txt',header=T)
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=3
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("Mars2","Ndufb5","Chmp6","Ciao1","Tomm70a","Upf1","Ptar1","Mcm4","Pmpcb","Ngdn")
# samplelabel=sub('.\w+.\w+$','',colnames(gstable)[startindex]);
samplelabel='1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23_vs_0 neg.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))



# you need to write after this code:
# dev.off()




@
%%
\clearpage
\newpage
The following figures show the distribution of sgRNA read counts (normalized) of selected genes in selected samples.
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(55.13298422662613,3.8529575898120547,0.0,0.9161136318383519,6.234580249776216,0.0,0.0,0.0,0.0,1.2196833308440247,0.0,0.0,7.789820464460511,5.8789258738099,8.97067131909208,5.590034488563068,1.0311349930000306,0.4832897763558758,36.2584244627577,12.255955326239242,0.0,2.993518744197662,1.8745622536744744,8.67115377153061),c(54.581654384359865,3.371337891085548,1.021312341036239,30.231749850665615,0.0,55.845065487346076,0.0,0.0,0.0,64.64321653473331,385.2906606600611,36.76350668572417,0.0,1.469731468452475,13.456006978638118,4.730029182630289,33.511887272501,0.4832897763558758,21.85439282686766,5.252552282673961,25.71055727317914,4.490278116296493,38.740953242605805,22.544999805979586),c(28.669151797845586,0.0,3.063937023108717,0.0,11.509994307279168,0.0,0.0,0.0,0.0,7.318099985064148,274.6220666406819,33.699881128580486,1.9474551161151277,7.348657342262374,0.0,12.040074283058917,0.0,19.81488083059091,1.9867629842606962,14.006806087130563,9.182341883278264,0.0,0.0,0.0),c(108.61197892645346,5.297816685991576,13.787716603989226,104.8950108454913,2.877498576819792,25.65854360229414,0.0,33.798640218416146,0.0,2.4393666616880494,0.0,0.0,9.737275580575638,10.288120279167325,21.4299370400533,20.640127342386716,43.307669706001285,11.59895463254102,48.67569311438706,8.754253804456603,12.85527863658957,68.10255143049682,17.49591436762843,10.405384525836732))
targetgene="Mars2"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(162.0909736262808,11.558872769436164,2.5532808525905977,226.28006706407294,43.64206174843351,1.5093260942525966,412.2791720722207,136.54650648240124,0.0,9.757466646752198,16.39534726213026,67.39976225716097,21.422006277266405,30.864360837501973,95.68716073698218,30.10018570764729,114.4559842230034,17.881721725167402,55.13267281323432,5.252552282673961,53.257582923013935,95.04422012827577,0.6248540845581582,19.076538297367343),c(56.78697375342491,20.709647045239794,9.702467239844271,5.496681791030111,46.03997722911667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.8949102322302553,7.348657342262374,45.35172722429885,13.760084894924477,15.982592391500475,48.32897763558758,0.0,12.255955326239242,5.509405129966959,0.0,10.62251943748869,0.0),c(38.59308895863829,2.889718192359041,2.042624682072478,18.780329452686214,9.112078826596008,7.546630471262983,18.95536423320555,0.0,53.40498780718559,2.4393666616880494,0.0,0.0,5.842365348345383,0.0,12.459265720961222,10.320063671193358,6.186809958000184,22.231329712370286,20.86101133473731,245.11910652478485,12.85527863658957,53.883337395557916,0.0,13.873846034448976),c(27.0151622710468,2.889718192359041,0.5106561705181195,0.45805681591917596,2.3979154806831597,63.391695958609056,0.0,1.351945608736646,0.0,0.0,0.0,0.0,0.0,5.8789258738099,5.482076917222937,3.440021223731119,9.280214937000276,16.915142172455653,66.55655997273333,0.0,0.0,4.490278116296493,0.0,20.810769051673464))
targetgene="Ndufb5"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(60.09495280702247,117.03358679054116,1.5319685115543584,6.87085223878764,34.05039982570087,221.8709358551317,0.0,817.9270932856708,38.83999113249861,3.659049992532074,0.0,0.0,7.789820464460511,24.985434963692075,37.87616779172211,12.040074283058917,15.46702489500046,14.015403514320397,31.291517002105966,56.02722434852225,88.15048207947135,0.7483796860494155,2.4994163382326327,64.16653790932651),c(47.41436643489847,23.599365237598835,0.5106561705181195,17.864215820847864,9.591661922732639,18.11191313103116,0.0,0.0,0.0,10.977149977596222,0.0,6.127251114287361,7.789820464460511,10.288120279167325,31.895720245660726,0.8600053059327798,19.59156486700058,22.71461948872616,48.17900236832188,63.03062739208754,0.0,1.496759372098831,0.0,0.0),c(73.32686902141275,0.0,27.575433207978453,46.26373840783677,26.85665338365139,0.0,0.0,94.63619261156522,12.137497228905815,10.977149977596222,0.0,0.0,11.684730696690766,32.33409230595445,9.469041947930528,27.950172442815344,62.89923457300187,15.465272843388025,25.331228049323876,45.52211978317433,93.6598872094383,0.0,16.87106028307027,62.43230715502039),c(38.59308895863829,0.0,8.681154898808032,0.9161136318383519,20.622073133875176,0.0,0.0,0.0,12.137497228905815,30.49208327110062,0.0,0.0,7.789820464460511,10.288120279167325,0.9967412576768977,20.640127342386716,0.5155674965000153,8.699215974405764,40.231950431279095,0.0,0.0,35.92222493037195,1.2497081691163163,1.734230754306122))
targetgene="Chmp6"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(34.73378006277446,1.9264787949060274,2.5532808525905977,7.328909054706815,55.631639151849306,0.0,0.0,0.0,50.977488361404426,3.659049992532074,14.34592885436398,15.318127785718403,5.842365348345383,4.409194405357425,7.475559432576732,26.660164483916173,8.76464744050026,5.79947731627051,0.49669074606517405,61.27977663119621,3.6729367533113058,0.0,47.48891042642002,0.0),c(50.72234548849603,41.41929409047959,2.042624682072478,45.34762477599842,0.0,4.52797828275779,0.0,0.0,0.0,1.2196833308440247,0.0,0.0,0.0,11.7578517476198,76.74907684112112,13.760084894924477,29.387347300500874,0.0,0.0,0.0,29.383494026490446,1.496759372098831,23.11960112865185,3.468461508612244),c(62.300272176087525,11.077253070709657,13.277060433471107,41.68317024864501,36.92789840252066,46.78910892183049,0.0,112.21148552514161,0.0,0.0,0.0,0.0,5.842365348345383,10.288120279167325,40.36802093591436,27.950172442815344,22.684969846000673,3.866318210847006,17.880866858346266,0.0,198.33858467881052,27.690048383828373,14.996498029395795,26.01346131459183),c(77.18617791727658,14.930210660521713,8.681154898808032,4.122511343272584,19.66290694160191,0.0,0.0,21.631129739786335,50.977488361404426,19.514933293504395,32.79069452426052,0.0,9.737275580575638,35.2735552428594,31.39734961682228,28.810177748748124,20.622699860000612,30.93054568677605,25.82791879538905,5.252552282673961,29.383494026490446,24.69652963963071,0.0,12.139615280142854))
targetgene="Ciao1"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(152.71836630775437,8.187534878350617,12.766404262952987,6.412795422868464,14.38749288409896,342.6170233953394,0.0,0.0,4.854998891562326,1.2196833308440247,4.098836815532565,36.76350668572417,21.422006277266405,55.84979580119405,53.824027914552474,9.030055712294187,42.276534713001254,30.93054568677605,252.8155897471736,164.5799715237841,55.09405129966959,58.37361551185441,31.242704227907907,0.0),c(78.84016744407536,3.371337891085548,12.766404262952987,161.69405601946912,33.091233633427606,0.0,232.20321185676798,5.407782434946584,0.0,15.855883300972321,151.65696217470492,6.127251114287361,23.36946139338153,11.7578517476198,22.4266782977302,27.090167136882563,61.86809958000184,69.59372779524611,27.814681779649746,73.53573195743546,0.0,31.431946814075452,18.745622536744744,24.279230560285708),c(115.77926687591486,35.158238007035,6.638530216735553,25.651181691473855,31.17290124888108,98.10619612641878,28.433046349808325,17.575292913576398,63.11498559031024,7.318099985064148,14.34592885436398,91.90876671431042,25.31691650949666,2768.9740865644626,27.908755214953135,30.530188360613682,115.48711921600344,49.29555718829933,63.57641549634228,96.29679184902263,25.71055727317914,12.722454662840065,91.22869634549109,32.950384331816316),c(91.52075381619937,101.62175643129294,0.5106561705181195,14.65781810941363,1.438749288409896,182.6284574045642,0.0,0.0,0.0,1.2196833308440247,0.0,0.0,62.318563715684085,64.6681846119089,39.86965030707591,42.5702626436726,77.85069197150231,9.665795527117515,34.27166147849701,0.0,45.911709416391325,13.470834348889479,38.740953242605805,1.734230754306122))
targetgene="Tomm70a"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(95.3800627120632,14.930210660521713,3.5745931936268365,69.16657920379556,54.19288986343941,60.37304377010386,66.34377481621942,29.74280339220621,0.0,125.62738307693455,0.0,0.0,17.52709604503615,19.106509089882174,35.38431464752987,22.360137954252274,79.39739446100236,30.447255910420175,48.17900236832188,24.511910652478484,3.6729367533113058,110.01181384926409,66.85938704772292,0.0),c(57.88963343795743,7.705915179624109,5.106561705181195,256.9698737306577,5.275414057502951,22.63989141378895,0.0,13.519456087366459,0.0,0.0,0.0,0.0,1.9474551161151277,44.091944053574245,7.475559432576732,30.10018570764729,48.978912167501456,29.480676357708422,30.794826256040793,28.013612174261127,9.182341883278264,82.3217654654357,19.370476621302902,6.936923017224488),c(45.76037690809969,51.53330776373623,1.5319685115543584,0.0,8.632495730459375,0.0,0.0,0.0,0.0,6.098416654220124,122.96510446597696,27.572630014293125,5.842365348345383,8.81838881071485,51.33217477036023,12.900079588991696,6.186809958000184,8.215926198049889,104.30505667368655,0.0,3.6729367533113058,23.199770267531882,0.0,0.0),c(64.50559154515257,37.08471680194103,14.298372774507346,7.786965870625991,7.19374644204948,7.546630471262983,18.95536423320555,924.7307963758658,0.0,457.38124906650927,2.0494184077662827,12.254502228574722,7.789820464460511,17.6367776214297,37.37779716288367,33.540206931378414,34.54302226550103,34.796863897623055,17.880866858346266,1.7508507608913204,0.0,41.90926241876727,1.2497081691163163,50.292691874877534))
targetgene="Upf1"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(142.2430993046954,265.3724539983053,30.63937023108717,140.16538567126784,3.8366647690930558,81.50360908964021,0.0,0.0,0.0,14.636199970128295,34.840112932026805,18.381753342862083,11.684730696690766,13.227583216072274,71.26699992389818,11.610071630092527,23.200537342500688,7.249346645338137,14.900722381955221,96.29679184902263,11.018810259933918,23.948149953581297,14.371643944837638,12.139615280142854),c(143.8970888314942,28.89718192359041,40.85249364144956,658.685701291775,404.7681331393174,1291.9831366802227,156.38175492394578,24.335020957259626,0.0,30.49208327110062,215.18893281545968,257.34454680006917,303.8029981139599,69.07737901726632,105.15620268491271,62.35038468012654,133.53198159350396,99.07440415295453,85.43080832320993,112.0544486970445,75.29520344288177,76.33472797704039,13.74678986027948,84.97730696099998),c(80.49415697087414,2.889718192359041,34.21396342471401,6.412795422868464,2.877498576819792,0.0,132.68754963243885,0.0,0.0,0.0,0.0,0.0,5.842365348345383,2.93946293690495,10.964153834445874,10.750066324159748,16.49815988800049,19.33159105423503,0.0,0.0,11.018810259933918,22.451390581482464,1.8745622536744744,0.0),c(119.08724592951243,40.45605469302657,46.46971151714887,9.619193134302694,2.877498576819792,4.52797828275779,0.0,45.96615069704596,0.0,4.878733323376099,0.0,0.0,3.8949102322302553,66.13791608036138,22.4266782977302,29.240180401714515,41.76096721650124,14.015403514320397,52.152528336843275,52.52552282673961,11.018810259933918,17.961112465185973,91.22869634549109,24.279230560285708))
targetgene="Ptar1"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(52.37633501529482,0.0,8.681154898808032,33.89620437801902,0.9591661922732639,3.018652188505193,0.0,0.0,31.55749279515512,0.0,0.0,0.0,5.842365348345383,13.227583216072274,0.0,4.300026529663899,139.20322405500414,2.4164488817793788,3.4768352224562182,0.0,0.0,0.0,26.24387155144264,0.0),c(106.40665955738842,27.933942526137397,4.595905534663076,8.245022686545168,21.101656230011805,4.52797828275779,0.0,64.89338921935901,242.74994457811633,80.49909983570564,200.84300396109572,52.08163447144257,11.684730696690766,239.5662293577534,51.830545399198684,86.86053589921076,24.23167233550072,26.09764792321729,68.54332295699402,224.108897394089,16.528215389900875,76.33472797704039,15.621352113953954,64.16653790932651),c(52.37633501529482,0.0,52.59758556336631,8.703079502464343,8.152912634322744,196.21239225283756,0.0,0.0,0.0,0.0,8.19767363106513,3.0636255571436806,11.684730696690766,11.7578517476198,0.0,48.590299785202056,9.280214937000276,46.87910830651995,10.92719641343383,19.259358369804524,5.509405129966959,44.15440147691552,44.364640003629226,3.468461508612244),c(41.34973816996959,0.48161969872650684,27.064777037460335,29.773693034746437,2.3979154806831597,1.5093260942525966,0.0,356.91364070647455,0.0,30.49208327110062,0.0,0.0,5.842365348345383,8.81838881071485,3.488594401869142,26.230161830949783,22.169402349500658,7.249346645338137,8.940433429173133,28.013612174261127,0.0,0.7483796860494155,27.49357972055896,71.103460926551))
targetgene="Mcm4"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(9.923937160792702,72.24295480897602,3.5745931936268365,0.45805681591917596,58.5091377286691,0.0,28.433046349808325,1.351945608736646,0.0,0.0,0.0,0.0,85.68802510906562,45.561675522026725,11.462524463284323,13.330082241958086,2.5778374825000765,7.732636421694012,0.0,14.006806087130563,0.0,0.0,103.72577803665426,0.0),c(50.171015646229776,27.45232282741089,56.682834927511266,4.122511343272584,7.19374644204948,6.037304377010386,0.0,0.0,12.137497228905815,14.636199970128295,446.7732128930496,27.572630014293125,7.789820464460511,5.8789258738099,43.35824470894505,33.9702095843448,11.342484923000336,8.699215974405764,35.76173371669253,0.0,66.1128615596035,32.92870618617428,233.07057354019298,3.468461508612244),c(79.39149728634162,23.599365237598835,15.830341286061705,17.406159004928686,99.27370090028282,13.583934848273369,23.69420529150694,16.223347304839752,48.54998891562326,13.416516639284271,12.296510446597697,0.0,0.0,5.8789258738099,36.879426534045216,22.790140607218664,36.60529225150109,60.411222044484475,25.82791879538905,63.03062739208754,75.29520344288177,0.0,143.71643944837638,74.57192243516324),c(101.44469097699206,13.485351564342192,87.83286132911655,40.308999800887484,4.316247865229688,67.91967424136685,0.0,754.3856496750484,26.702493903592796,32.93144993278867,1028.808040698674,79.6542644857357,37.00164720618743,76.4260363595287,29.40386710146848,48.590299785202056,38.15199474100113,9.665795527117515,61.09296176601641,31.51531369604377,77.13167181953742,0.0,10.62251943748869,26.01346131459183))
targetgene="Pmpcb"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(13.23191621439027,42.86415318665911,0.0,19.696443084524567,14.86707598023559,0.0,0.0,20.27918413104969,0.0,1.2196833308440247,38.93894974755937,3.0636255571436806,3.8949102322302553,4.409194405357425,5.980447546061386,0.8600053059327798,6.186809958000184,14.015403514320397,16.887485366215916,1.7508507608913204,12.85527863658957,10.477315604691817,18.745622536744744,10.405384525836732),c(61.74894233382126,122.33140347653274,0.5106561705181195,3.6644545273534077,23.9791548068316,1.5093260942525966,0.0,79.76479091546211,48.54998891562326,3.659049992532074,4.098836815532565,0.0,9.737275580575638,17.6367776214297,120.60569217890462,24.510151219084225,25.262807328500752,44.46265942474057,59.602889527820885,1.7508507608913204,58.76698805298089,58.37361551185441,49.363472680094496,36.41884584042856),c(52.92766485756108,6.261056083444589,97.53532856896082,12.367534029817751,13.428326691825696,6.037304377010386,0.0,0.0,0.0,3.659049992532074,57.38371541745592,6.127251114287361,17.52709604503615,39.68274964821682,29.90223773030693,26.230161830949783,14.951457398500445,29.963966134064297,5.463598206716915,71.78488119654413,60.603456429636545,0.0,13.74678986027948,13.873846034448976),c(61.74894233382126,106.91957311728451,0.5106561705181195,29.773693034746437,17.744574557055383,18.11191313103116,0.0,191.97627644060373,0.0,12.196833308440247,26.642439300961676,3.0636255571436806,11.684730696690766,30.864360837501973,33.88920276101452,46.01028386740372,21.653834853000642,69.59372779524611,5.960288952782088,45.52211978317433,12.85527863658957,0.7483796860494155,7.4982490146978975,27.74769206889795))
targetgene="Ngdn"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@

\newpage\section{Comparison results of 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23 vs 0 pos.}

The following figure shows the distribution of RRA score in the comparison 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23 vs 0 pos., and the RRA scores of 10 genes.

<<echo=FALSE>>=
gstable=read.table('invivo.poolC_all_v_input.gene_summary.txt',header=T)
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=9
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("Thrap3","Tmem94","Fibp","Rmnd1","Atp2c1","Trim30a","Gskip","Slco2a1","Crisp2","Tnrc6b")
# samplelabel=sub('.\w+.\w+$','',colnames(gstable)[startindex]);
samplelabel='1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23_vs_0 pos.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))



# you need to write after this code:
# dev.off()




@
%%
\clearpage
\newpage
The following figures show the distribution of sgRNA read counts (normalized) of selected genes in selected samples.
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(279.52423002899445,115.58872769436164,610.2341237691528,195.13220358156897,129.48743595689064,815.0360908964021,1146.7995361089359,2390.23983624639,803.502316553565,1642.9134466469013,381.1918238445286,520.8163447144257,780.9295015621663,612.878022344682,290.5500766128157,439.4627113316505,295.4201754945088,288.04070670810194,200.66306141033033,369.4295105480686,501.35586682699324,719.9412579795377,442.396691867176,522.0034570461427),c(193.5167746354577,247.5525251454245,249.71086738336044,1060.4015288528924,343.8610799299651,620.3330247378171,80.56029799112359,123.02705039503478,148.07746619265095,1606.3229467215806,137.31103332034095,199.13566121433922,91.530390457411,424.75239438276526,207.82055222563318,284.2317536107837,225.3029959705067,295.773343129796,163.41125545544227,481.4839592451131,418.71478987748884,266.4231682335919,311.17733410996277,117.92769129281629),c(173.11757047160603,128.1108398612508,257.37070994113225,207.4997376113867,235.4753002030863,523.736154705651,108.99334434093191,5344.240991335962,466.0798935899833,160.99819967141127,545.1452964658312,502.4345913715636,220.06242812100942,1172.8457118250749,229.25048926568647,179.74110893995098,242.83229085150722,251.79397348141129,347.18683149955666,455.2211978317433,771.3167181953742,337.5192384082864,474.8891042642002,723.1742245456528),c(335.7598739401531,1056.673619005956,421.2913406774486,276.66631681518226,1394.1480604691892,2289.647684981189,1653.8555293471843,1043.7020099446906,233.03994679499166,1462.4003136819856,250.0290457474865,833.3061515430811,11003.121406050472,2962.9786404001893,330.41972691989156,307.45189687096877,442.87247949351314,558.6829814673924,867.7187333758591,721.350513487224,1566.5075252872718,562.7815239091605,471.7648338414094,1363.1053728846118))
targetgene="Thrap3"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(83.25080618220545,175.3095703364485,227.7526520510813,357.74237323287645,267.127784548104,658.0661770941321,47.38841058301388,4.055836826209938,21.847495012030468,1903.9256794475225,991.9185093588808,5208.163447144257,757.5600401687847,63.19845314345642,43.856615337783495,81.2705014106477,227.88083345300677,47.8456878592317,92.38447876812238,141.81891163219694,189.15624279553225,483.4532771879224,125.5956709961898,166.4861524133877),c(180.8361882633337,278.37618586392097,562.7430999109677,734.7231327343583,1472.7996882355967,642.9729161516061,772.4310925031261,146.01012574355775,1009.8397694449638,464.6993490515734,57.38371541745592,174.62665675718978,173.32350533424636,571.7255412280127,345.8692164138835,254.9915732090692,213.44494355100633,307.372297762337,175.33183336100643,325.65824152578557,310.3631556548053,507.40142714150375,314.3016045327536,671.1473019164692),c(101.44469097699206,470.54244565579717,51.57627322233007,288.11773721316166,82.00870943936407,439.2138934275056,559.1832448795637,16.223347304839752,16.992496120468143,219.54299955192445,6.1482552232988485,82.71789004287938,42.84401255453281,47.0314069904792,181.90527952603384,171.14105588062318,263.45499071150783,208.29789360938247,177.81528709133232,337.9141968520248,374.6395488377532,197.5722371170457,122.471400573399,159.5492293961632),c(147.20506788509175,97.76879884148089,623.5111842026239,660.0598717395326,116.53869236120157,69.42900033561943,5501.794468687911,401.52784579478384,2087.6495233718,1008.6781146080084,2037.121897319685,520.8163447144257,6862.83182918971,1618.174346766175,228.25374800800958,203.8212575060688,307.2782279140091,294.3234738007283,303.97473659188654,145.3206131539796,185.48330604222093,402.62827109458556,111.84888113591032,220.2473057968775))
targetgene="Tmem94"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(57.33830359569117,163.75069756701234,15.830341286061705,5.496681791030111,17.26499146091875,66.41034814711425,0.0,117.6192679600882,191.7724562167119,40.24954991785282,0.0,67.39976225716097,553.0772529766963,142.56395243989007,74.75559432576733,22.360137954252274,26.293942321500783,131.93810894515408,57.119435797495015,115.55615021882714,25.71055727317914,289.6229385011238,154.96381297042322,5.202692262918366),c(172.56624062933977,2379.2013117089436,459.59055346630754,1122.6972558179002,957.2478598887174,51.31708720458828,8292.97185202743,459.66150697045964,233.03994679499166,641.553432023957,1213.2556973976393,171.5630312000461,120.74221719913791,574.6650041649177,350.85292270226796,276.9217085103551,495.97593163301474,569.7986463235775,234.43803214276215,374.68206283074255,341.5831180579514,279.8940025824814,857.299804013793,953.8269148683671),c(191.31145526639264,61.647321436992875,522.4012624400362,38.47677253721078,36.44831530638403,2239.8399238708535,5648.698541495254,15746.110504955715,94.67247838546537,502.5095323077382,43.037786563091935,171.5630312000461,288.2233571850389,301.29495103275735,269.6185102016008,382.27235848712064,211.8982410615063,200.56525718768845,184.76895753624476,544.5145866372006,696.0215147524924,422.8345226179198,641.1002907566702,816.8226852781835),c(346.23514094321206,849.5771485535581,2537.961167475054,2440.9847720332887,588.9280420557841,307.9025232275297,10406.494964029847,166.28930987460745,342.277421855144,7715.7167509193005,668.1104009318082,2300.782793414904,4627.1533558895435,4376.86031305147,780.9467753898493,651.0240165911143,533.6123588775158,1116.8826731584288,668.5457442037243,1199.3327712105545,666.638020726002,3377.437523141012,1193.471301506082,582.701533446857))
targetgene="Fibp"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(266.8436436568704,280.302664658827,845.1359622074878,279.8727145266165,513.6334959623329,36.22382626206232,360.1519204309055,1218.102993471718,424.81240301170357,359.8065825989873,127.06394128150953,257.34454680006917,136.32185812805895,486.4811160577692,271.6119927169546,297.9918385057082,284.5932580680085,358.60101405605985,390.895617153292,1043.507053491227,139.5715966258296,492.4338334205154,900.4147358483059,459.57114989112233),c(282.83220908259204,310.1630859798704,280.3502376144476,537.7587018891126,490.1339242516379,1445.9343982939874,473.88410583013876,485.3484735364559,500.0648858309196,318.3373493502904,690.6540034172373,3541.551144058095,1723.497777761888,636.3937258399217,220.77818857543284,327.6620215603891,432.04556206701284,315.104934184031,381.45849297805364,563.7739450070052,404.0230428642436,499.91763028100956,750.4497555543479,501.1926879944692),c(127.35719356350634,49.125209270103696,124.60010560642117,245.51845333267832,344.82024612223836,241.49217508041545,601.8328144042762,3644.8453611539976,82.53498115655955,176.8540829723836,672.2092377473407,306.36255571436806,85.68802510906562,330.68958040180684,93.69367822162839,135.02083303144641,140.23435904800417,228.59606421632924,109.76865488040346,71.78488119654413,429.7336001374228,243.22339796606005,297.4305442496833,369.391150667204))
targetgene="Rmnd1"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(685.854323779229,1314.8217775233636,611.7660922807072,1203.7733122355944,640.7230164385403,784.8495690113502,1881.3199001456508,1798.087659619739,737.9598315174736,1223.3423808365567,2723.6770639213896,1893.3205943147946,825.7209692328141,3121.7096389930566,1043.0897261588734,721.5444516776023,671.78444793952,690.1378006361906,790.7316677357571,1036.5036504476616,2156.0138741937367,1304.4257927841313,1695.2291314062832,1352.699988358775),c(222.73725627556954,216.72886442692808,225.1993711984907,529.9717360184866,525.143490269612,538.829415648177,3070.7690057792993,1185.6562988620385,310.7199290599889,295.163366064254,676.3080745628733,101.09964338574146,111.00494161856227,1203.710072662577,273.10710460346996,312.18192605359906,448.0281544585133,354.7346958452128,295.0343031627134,157.57656848021884,494.0099933203706,214.03659021013283,277.4352135438222,572.2961489210203),c(370.49365400292754,208.54132954857747,85.79023664704408,665.5565535305627,1647.8475183254675,280.73465353098294,251.15857608997354,3141.921594703965,208.76495233718003,600.0841987752601,55.334297009689635,851.6879048859432,303.8029981139599,358.6144783024039,367.2991534539368,351.74217012650695,470.713124304514,727.8344031919489,700.3339519518954,791.3845439228768,679.4932993625915,1788.6274496581032,712.3336563963003,822.0253775411018),c(225.49390548690084,301.4939314027933,91.4074545227434,718.233087361268,288.70902387425247,42.261130639072704,369.6296025475082,1297.86778438718,63.11498559031024,75.62036651232953,127.06394128150953,64.33613670001729,3174.3518392676583,978.8411579893483,321.947426229638,199.09122832343851,517.6297664860153,233.91225175624388,372.02136880281535,225.85974815498034,679.4932993625915,418.3442445016233,681.7158062529505,358.98576614136726))
targetgene="Atp2c1"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(224.39124580236833,112.21738980327609,119.49354390123996,769.9935075601348,456.5631075220736,615.8050464550594,440.712218422029,498.86792962382236,55.83248725296675,875.7326315460098,1162.0202372034823,499.37096581441995,136.32185812805895,893.5967328191048,275.5989577476622,267.4616501450945,517.6297664860153,417.56236677147666,230.46450617424077,232.8631511985456,244.25029409520184,240.22987922186238,514.8797656759223,730.1111475628774),c(212.81331911477685,69.83485631534349,339.58635339454946,813.5089050724565,377.43189665952934,246.02015336317325,146.90407280734303,582.6885573654944,706.4023387223185,130.50611640031065,69.68022586405361,55.14526002858625,1203.5272617591488,477.66272724705436,138.5470348170888,227.47140341922025,390.2845948505116,275.4751725228492,267.7163121291288,154.0748669584362,319.5454975380836,205.80441366358926,686.0897848448577,194.23384448228566),c(238.72582170129112,154.1183035924822,446.31349303283645,299.1111007952219,255.1382071446882,498.07761110335684,1265.2705625664705,278.50079539974905,4316.094014598908,1851.4792962212296,416.03193677655537,3281.142971700882,1337.9016647710928,305.7041454381148,310.48490176635363,390.8724115464484,325.8386577880097,383.2487926502095,208.11342260130792,432.46013794015613,246.0867624718575,401.87989140853614,582.9888608927615,461.30538064542844),c(116.88192656044738,126.18436106634479,177.70834734030558,512.1075201976387,19.183323845465278,407.51804544820106,0.0,346.09807583658136,24.27499445781163,364.6853159223634,467.26739697071247,58.20888558572993,46.73892278676306,701.0619104518305,193.8661746181566,177.59109567511902,254.69034327100758,115.50625654905431,103.3116751815562,59.528925870304896,152.4268752624192,65.85741237234856,144.34129353293454,150.8780756246326))
targetgene="Trim30a"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(90.9694239739331,241.29146906197994,213.45427927657394,305.5238962180904,125.17118809166094,98.10619612641878,2881.215363447244,28.390857783469563,4.854998891562326,192.7099662733559,71.7296442718199,413.5894502143969,89.58293534129588,210.17159998870392,152.0030417957269,171.57105853358956,197.46235115950586,242.12817795429376,100.82822145123033,169.83252380645808,101.0057607160609,198.3206168030951,113.72344338958479,126.5988450643469),c(244.79044996622,16.375069756701233,889.0523928720461,286.7435667654041,200.9453172812488,79.99428299538762,781.908774619729,3874.6761146392273,203.9099534456177,817.1878316654966,649.6656352619116,612.7251114287361,410.91302950029194,260.1424699160881,132.06821664218896,328.95202951928826,203.64916111750605,432.06106006215293,298.5111383851696,126.06125478417508,168.95509065232005,355.4803508734724,240.5688225548909,315.6299972837142),c(235.96917248995982,869.8051759000714,212.94362310605584,752.1292917392869,476.7055975598122,754.6630471262982,99.51566222432913,524.5548961898186,46.1224894698421,535.4409822405269,88.12499153395015,487.1164635858452,876.3548022518074,442.38917200419496,330.41972691989156,268.3216554510273,401.6270797735119,174.46760926447115,131.12635696120594,574.2790495723531,369.1301437077862,667.5546799560786,253.69075833061223,442.2288423480611),c(242.0338007548887,210.46780834348348,309.96829550449854,106.26918129324882,416.27812744659656,164.51654427353301,402.80148995561797,78.41284530672546,684.554843710288,1017.2158979239166,1686.6713495916506,235.8991679000634,2459.635811653406,1865.0892334661908,182.40365015487228,296.2718278938426,299.5447154665089,312.68848530225165,297.51775689303923,420.2041826139169,271.79731974503665,434.060217908661,138.09275268735294,584.4357642011631))
targetgene="Gskip"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(199.0300730581203,108.36443221346404,28.596745549014692,322.93005522301905,121.81410641870453,562.9786331562185,710.8261587452081,1658.8372619198647,286.4449346021772,64.64321653473331,114.76743083491183,27.572630014293125,294.0657225333843,120.51798041310295,375.77145414419044,90.30055712294188,140.74992654450418,161.41878530286252,130.1329754690756,206.60038978517582,165.28215389900876,168.3854293611185,103.1009239520961,130.06730657295915),c(137.83246056656532,613.1018764788432,328.862573813669,60.9215565172504,551.5205605571267,636.9356117745957,251.15857608997354,579.9846661480211,14.564996674686979,104.89276645258613,2.0494184077662827,3351.6063595151863,823.7735141166991,199.8834797095366,255.66413259412425,275.20169789848956,72.17944951000214,252.76055303412303,322.84898494236313,45.52211978317433,47.74817779304698,186.34654182630447,100.60150761386346,69.36923017224488),c(210.05666990344554,357.8434361537946,366.1404742614917,178.18410139255946,788.9141931447596,460.3444587470419,691.8707945120026,382.6006072724708,468.5073930357645,125.62738307693455,1049.3022247763367,520.8163447144257,142.16422347640432,139.6244895029851,232.24071303871716,371.95229481592725,276.85974562050825,349.9017980816541,312.9151700210596,252.12250956835015,255.26910435513574,145.18565909358662,448.0203786281994,225.44999805979586),c(164.8476228376121,26.00746373123137,251.2428358949148,239.10565790980985,13.428326691825696,227.90824023214208,1435.8688406653205,863.8932439827167,228.18494790342933,373.2230992382716,223.3866064465248,254.2809212429255,140.2167683602892,85.24442517024355,202.33847530841024,249.83154137347253,154.1546814535046,76.35978466422837,211.59025782376415,126.06125478417508,365.45720695447494,190.83681994260095,240.5688225548909,221.9815365511836))
targetgene="Slco2a1"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(243.68779028168748,249.47900394033056,89.87548601118904,155.73931741251982,57.54997153639584,214.3243053838687,132.68754963243885,632.7105448887503,245.1774440238975,56.105433218825134,395.5377526988926,27.572630014293125,1606.6504707949803,480.6021901839593,285.5663703244312,187.481156693346,157.76365392900468,65.24411980804322,239.90163034947906,245.11910652478485,238.7408889652349,101.77963730272052,328.6732484775912,381.5307659473468),c(278.97290018672817,624.6607492482793,605.6382182344897,466.3018386057211,282.9540267206129,104.14350050342917,1923.9694696703634,64.89338921935901,735.5323320716924,229.30046619867665,467.26739697071247,208.32653788577028,5709.938400449554,1337.4556362917522,284.5696290667543,509.553143765172,262.4238557185078,271.60885431200217,403.31288580492134,477.98225772333046,372.8030804610975,406.37016952483265,108.72461071311952,183.82845995644894),c(135.075811355234,273.0783691779294,218.56084098175515,132.83647661656104,95.43703613118976,173.57250083904862,611.310496520879,803.0556915895677,463.65239414420216,274.4287494399056,270.5232298251493,159.3085289714714,693.2940213369855,270.4305901952554,234.23419555407096,258.43159443280035,161.37262640450479,144.50364313040686,144.04031635890047,159.32741924111016,260.7785094851027,297.85511504766737,385.53497017238357,291.3507667234285),c(355.05641841947227,709.4258162241446,454.4839917611264,267.9632373127179,692.5179908212966,229.41756632639468,1544.8621850062523,519.1471137548721,589.8823653248227,2672.326177879258,3416.3804857463933,1099.8415750145814,198.640421843743,157.26126712441481,288.55659409746187,464.83286785666746,280.98428559250834,358.11772427970396,418.7102989329417,602.2926617466143,560.1228548799742,565.0266629673088,697.9620124514627,572.2961489210203))
targetgene="Crisp2"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(158.23166473041698,378.07146350030786,259.92399079372285,452.1020773122267,67.14163345912847,36.22382626206232,94.77682116602776,208.19962374544346,24.27499445781163,459.8206157281973,34.840112932026805,919.0876671431042,210.32515254043378,351.2658209601415,209.81403474098695,188.34116199927877,195.91564867000582,166.25168306642126,177.81528709133232,98.04764260991394,14.691747013245223,202.0625152333422,49.363472680094496,142.206921853102),c(252.50906775794766,168.56689455427738,745.0473527859364,431.4895205958638,632.0905207080809,273.18802305971997,80.56029799112359,251.46188322501615,893.319796047468,618.3794487379205,409.88368155325657,1234.6410995289032,430.3875806614432,254.26354404227817,446.0417128104117,574.0535417101305,446.4814519690133,226.66290511090574,171.85499813855023,227.61059891587166,214.8668000687114,319.55812594310044,299.30510650335776,575.7646104296325),c(237.07183217449233,211.912667439663,89.36482984067092,423.70255472523775,354.411908044971,372.80354528039135,620.7881786374818,246.05410079006955,6847.975936548662,845.2405482749091,81.9767363106513,579.0252303001556,185.00823603093713,179.30723915120194,338.3936569813068,200.38123628233768,395.4402698155117,213.6140811492971,268.70969362125913,943.7085601204217,396.67716935762104,324.79678374544636,278.68492171293855,282.67961295189787),c(186.90081652826257,579.3884975679878,459.07989729578946,879.4690865648179,130.4466021491639,167.53519646203821,459.6675826552346,1170.7848971659355,38.83999113249861,741.5674651531671,219.28776963099224,5640.134650701516,1036.046121773248,1322.7583216072273,270.6152514592777,221.88136893065717,412.9695646965123,258.56003035039356,364.0743168657726,61.27977663119621,123.04338123592875,683.2706533631164,288.0577329813109,405.80999650763255))
targetgene="Tnrc6b"
collabel=c("In.vivo.input_Pool.C..17.24._1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._BM_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1869_Pool.C..17.24._BM_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1856_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1859_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1860_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1861_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1862_Pool.C..17.24._BM_mCD19_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1850_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1851_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1852_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1853_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1854_Pool.C..17.24._SP_hEGFRv3_15m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1863_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1865_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1866_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1867_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399","In.vivo_AR1868_Pool.C..17.24._SP_mCD19_10m_1392..1393..1394..1395..1396..1397..1398..1399")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%__INDIVIDUAL_PAGE__









\end{document}

