% This is a template file for Sweave used in MAGeCK
% Author: Wei Li, Shirley Liu lab
% Do not modify lines beginning with "#__".
\documentclass{article}

\usepackage{amsmath}
\usepackage{amscd}
\usepackage[tableposition=top]{caption}
\usepackage{ifthen}
\usepackage{fullpage}
\usepackage[utf8]{inputenc}

\begin{document}
\setkeys{Gin}{width=0.9\textwidth}

\title{MAGeCK Comparison Report}
\author{Wei Li}

\maketitle


\tableofcontents

\section{Summary}

%Function definition
<<label=funcdef,include=FALSE,echo=FALSE>>=
genreporttable<-function(comparisons,ngenes,direction,fdr1,fdr5,fdr25){
  xtb=data.frame(Comparison=comparisons,Genes=ngenes,Selection=direction,FDR1=fdr1,FDR5=fdr5,FDR25=fdr25);
  colnames(xtb)=c("Comparison","Genes","Selection","FDR1%","FDR5%","FDR25%");
  return (xtb);
}
@

The statistics of comparisons is as indicated in the following table. 

<<label=tab1,echo=FALSE,results=tex>>=
library(xtable)
comparisons=c("2,3,5_vs_0 neg.","2,3,5_vs_0 pos.");
ngenes=c(3747,3747);
direction=c("negative","positive");
fdr1=c(283,2);
fdr5=c(290,4);
fdr25=c(539,12);

cptable=genreporttable(comparisons,ngenes,direction,fdr1,fdr5,fdr25);
print(xtable(cptable, caption = "Summary of comparisons", label = "tab:one",
    digits = c(0, 0, 0, 0, 0, 0, 0),
    table.placement = "tbp",
    caption.placement = "top"))
@

The meanings of the columns are as follows.

\begin{itemize}
\item \textbf{Comparison}: The label for comparisons;
\item \textbf{Genes}: The number of genes in the library;
\item \textbf{Selection}: The direction of selection, either positive selection or negative selection;
\item \textbf{FDR1\%}: The number of genes with FDR $<$ 1\%;
\item \textbf{FDR5\%}: The number of genes with FDR $<$ 5\%;
\item \textbf{FDR25\%}: The number of genes with FDR $<$ 25\%;
\end{itemize}

The following figures show:

\begin{itemize}
\item Individual sgRNA read counts of selected genes in selected samples; 
\item The distribution of RRA scores and p values of all genes; and
\item The RRA scores and p values of selected genes.
\end{itemize}


\newpage\section{Comparison results of 2,3,5 vs 0 neg.}

The following figure shows the distribution of RRA score in the comparison 2,3,5 vs 0 neg., and the RRA scores of 10 genes.

<<echo=FALSE>>=
gstable=read.table('invitro.poolA_hEGFRv3.CAR_ET.1.10_v_input.gene_summary.txt',header=T)
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=3
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("Srebf1","H2az1","Fasn","Nme6","Lig3","Oxsm","Rpe","Icmt","Mpi","Traf3")
# samplelabel=sub('.\w+.\w+$','',colnames(gstable)[startindex]);
samplelabel='2,3,5_vs_0 neg.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))



# you need to write after this code:
# dev.off()




@
%%
\clearpage
\newpage
The following figures show the distribution of sgRNA read counts (normalized) of selected genes in selected samples.
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(409.50321459719817,164.4244470577374,187.51758750166732,161.97559429934697),c(478.94071620281005,251.80429606556356,184.4931102838985,248.2837576851304),c(196.73958788256695,78.92373458771395,94.76695282342327,204.53852418822646),c(140.65545197034197,48.857549982870545,61.497703427966165,66.20900204936811))
targetgene="Srebf1"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(359.6506493418871,160.66617398213197,149.20754274326217,146.60564739502937),c(598.230783063733,328.8488941154748,321.60274415608535,364.1495112715246),c(243.92147999920064,66.70934709199632,62.50586250055577,152.51716543515153))
targetgene="H2az1"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(509.2083451078203,196.36976820038353,197.5991782275634,280.20595510179004),c(192.2884659847713,76.10502978100989,37.30188568581554,93.40198503393),c(137.9847788316646,47.91798171396918,81.66088487975834,62.662091225294816),c(278.6402308020066,99.5942365035438,161.30545161433747,127.68878966663848))
targetgene="Fasn"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(233.23878744449112,71.4071884365031,117.95461149298428,79.21434173763684),c(140.65545197034197,84.56114420112209,71.57929415386225,72.12052008949026),c(108.60737430621343,37.58273075605426,61.497703427966165,37.833715456781775),c(659.6562652533128,311.9366652752504,376.04333407592424,439.8169421850881))
targetgene="Nme6"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(613.3645975162382,323.21148450206664,355.88015262413205,390.16019064806204),c(429.08815094749895,185.09494897356726,238.9337002037374,122.95957523454076),c(190.50801722565308,136.2373989906967,108.8811798396778,62.662091225294816),c(207.42228043727647,38.52229902495562,48.39163548430125,37.833715456781775))
targetgene="Lig3"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(71.21795036473011,23.489206722533915,44.35899919394281,27.1929829845619),c(381.9062588308653,112.7481922681628,143.1585883077245,222.27307830859291),c(243.92147999920064,145.63308167971027,149.20754274326217,180.89245202773787),c(131.7532081747507,46.97841344506783,62.50586250055577,73.30282369751468))
targetgene="Oxsm"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(88.13221357635352,71.4071884365031,39.31820383099476,20.099161336415317),c(60.5352578100206,15.033092302421705,20.163181451792184,13.005339688268736),c(142.43590072946023,77.04459804991124,104.84854354931936,72.12052008949026),c(61.425482189579725,31.945321142646122,22.179499596971404,7.093821648146583))
targetgene="Rpe"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(368.55289313747835,203.88631435159436,241.9581774215062,221.0907747005685),c(179.82532467094356,97.71509996574109,99.80774818637131,92.21968142590558),c(871.5296675883848,584.4114632566437,639.1728520218122,1046.338693101621),c(391.69872700601564,264.0186835612812,261.1131998007088,279.0236514937656))
targetgene="Icmt"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(94.36378423326741,40.40143556275833,95.77511189601287,18.916857728390887),c(295.55449401363,55.43452786518004,69.56297600868304,63.84439483331924),c(398.8205220424887,149.3913547553157,166.34624697728552,107.58962833022318),c(135.31410569298723,130.59998937728855,152.232019961031,88.67277060183228))
targetgene="Mpi"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(185.1666709482983,98.65466823464244,97.7914300411921,164.34020151539585),c(113.94872058356819,84.56114420112209,48.39163548430125,56.75057318517266),c(259.9455188312649,140.93524033520347,133.0769975818284,128.8710932746629),c(378.34536131262877,264.0186835612812,256.0724044377607,133.60030770676065))
targetgene="Traf3"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@

\newpage\section{Comparison results of 2,3,5 vs 0 pos.}

The following figure shows the distribution of RRA score in the comparison 2,3,5 vs 0 pos., and the RRA scores of 10 genes.

<<echo=FALSE>>=
gstable=read.table('invitro.poolA_hEGFRv3.CAR_ET.1.10_v_input.gene_summary.txt',header=T)
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=9
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("Nf1","Nprl3","Depdc5","Nprl2","Sesn3","Gna13","Pard6a","Atp5j","Lrrc4b","H3c14_H3c15")
# samplelabel=sub('.\w+.\w+$','',colnames(gstable)[startindex]);
samplelabel='2,3,5_vs_0 pos.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))



# you need to write after this code:
# dev.off()




@
%%
\clearpage
\newpage
The following figures show the distribution of sgRNA read counts (normalized) of selected genes in selected samples.
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(1251.6554776601317,2013.494800255607,2081.848484897543,1988.6346686970921),c(351.63862992585496,618.2359209370926,604.8954435537655,284.93516953388774),c(1100.3173331350804,1611.3595811658265,2066.726098808699,2066.6667068267043),c(139.76522759078287,124.02301149497907,139.12595201736607,198.62700614810433))
targetgene="Nf1"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(301.78606467054385,403.074787358682,348.8230391160048,263.653704589448),c(232.34856306493202,321.33234796426393,286.317176615449,262.4714009814236),c(207.42228043727647,452.8719056104539,428.46760585058394,435.0877277529904),c(445.11218977956327,790.1769141460409,772.2498496036407,757.85661274366))
targetgene="Nprl3"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(145.10657386813762,191.67192685587673,175.41967863059202,206.90313140427534),c(490.51363313707867,622.9337622815995,552.4711717791058,323.95118859869393),c(292.8838208749526,502.6690238622258,469.8021278267579,452.82228187335687),c(665.8878359102266,1007.2171842622542,999.0856409363028,1254.4241281139207))
targetgene="Depdc5"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(94.36378423326741,243.34818164545135,127.02804314629077,141.87643296293166),c(397.93029766292955,504.5481604000285,580.699625811615,560.4119102035801),c(314.24920598437166,356.0963739136142,405.2799471810229,426.8116024968194),c(598.230783063733,725.3467035918472,951.7021645245911,1216.590412657139))
targetgene="Nprl2"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(368.55289313747835,384.28342198065485,394.19019738253724,368.8787257036223),c(98.81490613106304,155.9683326376252,128.03620221888036,173.7986303795913),c(0.8902243795591265,16.91222884022442,6.048954435537656,33.104501024684055),c(134.4238813134281,152.21005956201978,138.11779294477645,134.78261131478507))
targetgene="Sesn3"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(332.0536935755542,543.070459424984,395.1983564551268,345.2326535431337),c(527.903057078562,896.3481285318942,867.0168024270639,398.4363159042331),c(391.69872700601564,652.9999468864428,560.5364443598228,451.63997826533245),c(483.3918381006057,548.7078690383922,520.2100814562384,410.25935198447735))
targetgene="Gna13"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(36.499199561924186,87.37984900782617,68.55481693609343,29.55759020061076),c(41.840545839278946,77.04459804991124,76.6200895168103,79.21434173763684),c(253.71394817435106,264.9582518301826,177.43599677577123,335.77422467893825),c(278.6402308020066,241.46904510764864,252.0397681474023,423.2646916727461))
targetgene="Pard6a"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(2.6706731386773797,24.428774991435272,22.179499596971404,1.1823036080244305),c(47.181892116633705,57.31366440298275,49.39979455689085,76.84973452158798),c(180.7155490505027,145.63308167971027,110.89749798485701,322.7688849906695),c(52.523238393988464,24.428774991435272,31.252931250277886,65.02669844134367))
targetgene="Atp5j"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(144.2163494885785,222.6776797296215,153.2401790336206,309.76354530240076),c(82.79086729899876,109.92948746145872,145.17490645290374,210.45004222834862),c(75.66907226252575,79.8633028566153,38.31004475840515,73.30282369751468),c(108.60737430621343,128.72085283948584,150.2157018158518,172.61632677156686))
targetgene="Lrrc4b"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(72.10817474428924,53.55539132737732,61.497703427966165,39.01601906480621),c(0.8902243795591265,14.09352403352035,5.040795362948046,8.276125256171014))
targetgene="H3c14_H3c15"
collabel=c("In.vitro.input.Pool.A..1.8._1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep1_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep2_1360..1361..1362..1363..1406..1407..1408..1409","In.vitro_Pool.A..1.8._hEGFRv3.CAR_ET.1.10_rep3_1360..1361..1362..1363..1406..1407..1408..1409.y")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%__INDIVIDUAL_PAGE__









\end{document}

