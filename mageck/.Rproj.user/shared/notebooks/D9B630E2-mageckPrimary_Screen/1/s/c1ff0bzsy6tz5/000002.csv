"0","rowCount <- function(dat.table){"
"0","  as.data.frame(sapply(dat.table, length))"
"0","}"
"0",""
"0","p1log2 <- function(dat.table){"
"0","  log2(dat.table+1)"
"0","}"
"0",""
"0","summarizePool <- function(tt){"
"0","  tt <- merge(x=tt,y=sgRNAs.gene, by.x=c(""Construct.Barcode""),by.y=c(""Barcode.Sequence""), all=FALSE, all.x=TRUE)"
"0","  poolOut <-c()"
"0","  for (s in colnames(tt)){"
"0","    tmp <- tt %>% select(c(""Construct.Barcode"",s,""Pool""))"
"0","    tmp <- tmp %>% filter(!is.na(tmp[,s]))"
"0","    poolCt <- as.data.frame(table(tmp$Pool))"
"0","    poolOut <- rbind(poolOut,cbind(poolCt))"
"0","  }"
"0","  return(poolOut)"
"0","}"
"0",""
"0","read_mageck_output <- function(outbase){"
"0","  print(outbase)"
"0","  assign(paste0(outbase,"".gdata""),ReadRRA(paste0(outbase,"".gene_summary.txt""), score = c(""lfc"", ""rra"")[1]))"
"0","  assign(paste0(outbase,"".sdata""),ReadsgRRA(paste0(outbase,"".sgrna_summary.txt"")))"
"0","}"
"0",""
"0","plot_gdata_volcano <- function(gdata){"
"0","  VolcanoView(gdata, x = ""Score"", y = ""FDR"", top = 10,"
"0","                 alpha=1, x_cutoff = log2(1.38), y_cutoff = 0.5,"
"0","                 mycolour = c(""darkgrey"", ""#e41a1c"", ""#377eb8""),"
"0","                 ylab = ""-Log10(FDR)"", Label = ""id"") + ggtitle(i)"
"0","}"
"0",""
"0","plot_essentials <- function(gdata.df){"
"0","  toPlot <- merge(x=gdata.df, y=hart, by.x=""id"" ,by.y=""MGISym"", all.x=TRUE)"
"0","  essential <- toPlot %>% filter(toPlot$hart_essential == ""Y"")"
"0","  degPlot <- ggplot() + "
"0","    geom_point(data=toPlot, aes(x=Score, y=-log10(FDR)), col=""grey"") + "
"0","    geom_point(data=essential, aes(x=Score, y=-log10(FDR)), col=""red"") + "
"0","    theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), "
"0","                       panel.grid.minor = element_blank(), axis.line = element_line(colour = ""black""))"
"0","  return(degPlot)"
"0","}"
"0",""
"0","vlnplot_essentials <- function(df){"
"0","  Essential.toPlot <- merge(x=df, y=essentialGenes, by.x=""id"" ,by.y=""MGISym"", all.x=TRUE)"
"0","  Essential.toPlot <- merge(x=Essential.toPlot, y=GeneSymWhitelist, by.x=""id"" ,by.y=""GeneSym"", all.x=TRUE)"
"0","  Essential.toPlot <- Essential.toPlot %>% mutate(Essential = ifelse(is.na(Essential), ""No"", Essential))"
"0","  Essential.toPlot <- Essential.toPlot %>% dplyr::filter(geneSym.whitelist == ""Yes"")"
"0","  Essential.toPlot <- Essential.toPlot %>% rename(LFC = Score)"
"0","  data <- Essential.toPlot"
"0","  plot <- ggplot(data, aes(factor(Essential), LFC)) + geom_violin(fill='#A4A4A4') + geom_boxplot(width=.1) + ylim(-2.5, 2.5) +"
"0","    theme_bw() + "
"0","    theme(plot.title = element_text(size = 8),axis.title.x = element_text(size = 8),axis.title.y = element_text(size = 8))"
"0","  return(plot)"
"0","}"
