% This is a template file for Sweave used in MAGeCK
% Author: Wei Li, Shirley Liu lab
% Do not modify lines beginning with "#__".
\documentclass{article}

\usepackage{amsmath}
\usepackage{amscd}
\usepackage[tableposition=top]{caption}
\usepackage{ifthen}
\usepackage{fullpage}
\usepackage[utf8]{inputenc}

\begin{document}
\setkeys{Gin}{width=0.9\textwidth}

\title{MAGeCK Comparison Report}
\author{Wei Li}

\maketitle


\tableofcontents

\section{Summary}

%Function definition
<<label=funcdef,include=FALSE,echo=FALSE>>=
genreporttable<-function(comparisons,ngenes,direction,fdr1,fdr5,fdr25){
  xtb=data.frame(Comparison=comparisons,Genes=ngenes,Selection=direction,FDR1=fdr1,FDR5=fdr5,FDR25=fdr25);
  colnames(xtb)=c("Comparison","Genes","Selection","FDR1%","FDR5%","FDR25%");
  return (xtb);
}
@

The statistics of comparisons is as indicated in the following table. 

<<label=tab1,echo=FALSE,results=tex>>=
library(xtable)
comparisons=c("1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23_vs_0 neg.","1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23_vs_0 pos.");
ngenes=c(3823,3823);
direction=c("negative","positive");
fdr1=c(258,6);
fdr5=c(288,11);
fdr25=c(650,30);

cptable=genreporttable(comparisons,ngenes,direction,fdr1,fdr5,fdr25);
print(xtable(cptable, caption = "Summary of comparisons", label = "tab:one",
    digits = c(0, 0, 0, 0, 0, 0, 0),
    table.placement = "tbp",
    caption.placement = "top"))
@

The meanings of the columns are as follows.

\begin{itemize}
\item \textbf{Comparison}: The label for comparisons;
\item \textbf{Genes}: The number of genes in the library;
\item \textbf{Selection}: The direction of selection, either positive selection or negative selection;
\item \textbf{FDR1\%}: The number of genes with FDR $<$ 1\%;
\item \textbf{FDR5\%}: The number of genes with FDR $<$ 5\%;
\item \textbf{FDR25\%}: The number of genes with FDR $<$ 25\%;
\end{itemize}

The following figures show:

\begin{itemize}
\item Individual sgRNA read counts of selected genes in selected samples; 
\item The distribution of RRA scores and p values of all genes; and
\item The RRA scores and p values of selected genes.
\end{itemize}


\newpage\section{Comparison results of 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23 vs 0 neg.}

The following figure shows the distribution of RRA score in the comparison 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23 vs 0 neg., and the RRA scores of 10 genes.

<<echo=FALSE>>=
gstable=read.table('invivo.poolB_all_v_input.gene_summary.txt',header=T)
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=3
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("Sec61a1","Ppcs","Wdr4","Slc25a3","Idh3a","Fars2","Hmbs","Fxn","Dnajc9","Hsd17b10")
# samplelabel=sub('.\w+.\w+$','',colnames(gstable)[startindex]);
samplelabel='1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23_vs_0 neg.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))



# you need to write after this code:
# dev.off()




@
%%
\clearpage
\newpage
The following figures show the distribution of sgRNA read counts (normalized) of selected genes in selected samples.
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(70.57199337859842,3.1729431143154367,0.0,11.506839309271523,138.01289369929336,21.818425908768276,3.3066624609993767,14.235666214350447,2.2153398622808655,515.4451597843228,0.0,0.0,0.0,21.9505476015583,5.245098340569497,18.504241591936633,90.64725527058432,19.315479743326634,50.98404451918649,2.5540081795270417,0.0,16.464524398966045,0.0,370.59366826426316),c(69.4055141492001,53.940032943362425,3.1554063373548424,0.0,6.773638954566545,72.20860003139977,0.0,0.0,0.0,205.09859761051587,0.0,0.0,0.0,15.412086613860081,4.079520931554052,0.9489354662531607,12.00351782121893,20.19345609529603,35.29664620559065,10.216032718108167,11.515317379338777,0.0,49.60073819096727,0.0),c(53.65804455232277,0.0,4.207208449806457,6.712322930408388,9.313753562529,152.72898136137792,0.0,0.0,469.6520508035435,2.6986657580331035,5.88750082638888,0.0,2.850090037968987,19.14835003540192,11.655774090154436,15.182967460050572,9.106116967821256,133.45240549934766,58.582628077334476,17.026721196846943,1.9192195632231295,7.902971711503702,128.9619192965149,33.22563922369256),c(74.07143106679338,3.1729431143154367,26.82095386751616,0.0,25.401146079624542,4.675376980450345,0.0,0.0,6.646019586842597,10.794663032132414,0.0,38.747934991998136,0.0,11.208790264625513,33.218956156940145,9.963822395658188,48.01407128487572,2.6339290559081774,23.040866273093894,39.16145875274797,0.0,0.0,79.36118110554764,0.0))
targetgene="Sec61a1"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(107.31608910464554,1.2691772457261747,30.50226126109681,0.9589032757726269,5.080229215924909,1.0389726623222988,975.4654259948161,267.4271581695834,8.861359449123462,2.6986657580331035,0.0,0.0,0.0,10.274724409240054,27.391069111862926,11.86169332816451,12.417432228847169,15.803574335449065,3.1865027824491556,47.67481935117144,124.74927160950341,324.68042114761045,22.044772529318788,0.0),c(207.05006321820198,13.960949702987921,7.362614787161299,12.46574258504415,53.34240676721154,10.909212954384138,0.0,68.12783116867713,0.0,18.890660306231723,2.94375041319444,7.451525959999641,45.60144060750379,68.18680744313855,40.212420611032805,30.840402653227724,76.98807981885244,42.14286489453084,3.6767339797490255,2.5540081795270417,90.20331947148709,125.13038543214195,18.73805664992097,0.0),c(137.6445490690019,32.99860838888054,3.1554063373548424,2.876709827317881,82.13037232411936,1.0389726623222988,0.0,0.0,26.584078347370387,248.27724973904552,41.21250578472216,0.0,0.0,25.219778095407406,21.563182066785707,31.314870386354304,9.520031375449495,6.145834463785747,11.765548735196882,4.256680299211736,3.838439126446259,0.0,20.942533902852848,28.114002420047548),c(152.2255394364809,27.28731078311276,22.087844361483896,19.178065515452538,52.495701897890726,7.792294967417241,16.533312304996883,59.99316476047688,124.05903228772847,5.397331516066207,11.77500165277776,244.41005148798823,17.100540227813923,96.67581603239506,28.556646520878367,90.14886929405027,28.146179718720248,17.55952703938785,5.637658768948506,17.026721196846943,0.0,51.369316124774066,9.920147638193455,661.9569660720286))
targetgene="Ppcs"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(103.81665141645057,472.133935410137,24.717349642612934,36.43832447935982,99.06446971053572,3.636404318128046,13.226649843997507,7.117833107175223,11.076699311404328,51.27464940262897,0.0,0.0,0.0,93.40658553854595,20.980393362277987,45.074434647025136,13.245261044103646,20.19345609529603,37.74780219209,60.44486024880665,111.3147346669415,59.930868812236405,22.044772529318788,0.0),c(109.06580794874301,5.711297605767786,9.992120068290335,2.876709827317881,13.54727790913309,71.16962736907746,19.83997476599626,269.46082477163344,24.368738485089523,5.397331516066207,11.77500165277776,168.4044866959919,0.0,7.005493915390947,12.821351499169879,3.3212741318860624,38.49403990942622,100.96728047648014,91.18300269777583,68.95822084723012,42.22283039090885,181.76834936458516,0.0,53.6721864382726),c(114.31496448103546,1.9037658685892622,0.0,0.0,5.080229215924909,2.597431655805747,52.90659937599003,31.52183233177599,8.861359449123462,0.0,20.60625289236108,0.0,0.0,10.741757336932784,6.410675749584939,6.168080530645545,56.292359437440496,16.681550687418458,13.236242327096493,51.93149965038318,76.76878252892519,13.830200495131479,13.226863517591273,0.0),c(47.242408790632005,3.1729431143154367,0.0,0.0,33.86819477283272,0.0,39.67994953199252,9.151499709225288,0.0,0.0,0.0,0.0,0.0,7.005493915390947,0.0,3.795741865012643,16.970490712757798,29.851195966959345,7.108352360848116,0.8513360598423472,5.757658689669388,0.0,5.511193132329697,0.0))
targetgene="Wdr4"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(185.47019747433305,7.615063474357049,35.235370767129076,90.13690792262693,34.71489964215354,93.5075396090069,0.0,0.0,31.014758071932118,10.794663032132414,0.0,55.141292103997344,76.95243102516264,29.890107372334704,39.046843202017364,35.110612251366945,19.86789156615547,38.63095948665327,51.71939131513629,39.16145875274797,0.0,15.147362447048762,137.77982830824243,0.0),c(106.14960987524722,6.3458862286308735,27.34685492374197,19.178065515452538,5.080229215924909,10.909212954384138,0.0,8.134666408200255,22.153398622808655,10.794663032132414,200.1750280972219,128.16624651199382,0.0,56.04395132312757,73.43137676797295,36.534015450746686,9.520031375449495,43.02084124650023,24.021328667693634,58.742188129121956,0.0,241.0406372008629,206.11862314913066,23.002365616402543),c(84.56974413137827,15.230126948714098,9.992120068290335,9.589032757726269,17.780802255737182,7.272808636256092,2000.5307889046228,505.36615060944087,8.861359449123462,8.095997274099311,14.7187520659722,190.7590645759908,39.90126053156582,42.03296349234568,9.907407976631271,22.299983456949278,14.900918674616602,57.9464392299799,12.746011129796623,0.8513360598423472,1725.3783873375935,65.19951661990554,3.306715879397818,30.669820821870054),c(166.8065298039599,410.5788389924175,65.73763202822589,10.547936033498896,20.320916863699637,12.987158279028735,6.613324921998753,6.100999806150192,137.35107146141365,0.0,0.0,0.0,0.0,148.04943807859533,13.404140203677601,27.04466078821508,63.32890436712056,14.925597983479673,99.51693305187362,50.22882753069848,11.515317379338777,0.0,8.817909011727515,117.5676464838352))
targetgene="Slc25a3"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(74.07143106679338,10.153417965809398,25.24325069883874,0.0,17.780802255737182,23.376884902251724,0.0,0.0,4.430679724561731,10.794663032132414,14.7187520659722,0.0,0.0,3.269230493849108,44.874730247094575,21.351047990696117,9.106116967821256,12.291668927571495,20.834825885244477,0.0,0.0,0.0,4.408954505863758,0.0),c(86.90270259017491,19.03765868589262,42.07208449806457,72.87664895871964,54.18911163653236,49.35120146030919,1081.2786247467961,278.6123244808587,112.98233297632414,48.575983644595865,14.7187520659722,168.4044866959919,28.500900379689867,252.6648138817668,101.98802328885131,120.989271947278,75.33242218833949,44.776793950439014,104.9094762221722,38.31012269290562,151.61834549462722,181.10976838862652,101.40595363486642,84.34200726014265),c(54.82452378172109,0.6345886228630874,7.362614787161299,0.0,1.6934097386416362,3.636404318128046,0.0,0.0,2.2153398622808655,18.890660306231723,0.0,5.961220767999713,42.7513505695348,12.142856120010974,62.35839138232623,5.219145064392384,2.0695720381411946,34.24107772680631,8.333930354097792,0.0,1.9192195632231295,0.6585809759586418,41.885067805705695,679.8476948847862),c(167.38976941865906,21.576013177344972,2.6295052811290356,0.9589032757726269,185.42836638125917,46.75376980450345,0.0,6.100999806150192,8.861359449123462,2.6986657580331035,0.0,17.883662303999138,57.001800759379734,18.68131710770919,22.72875947580115,30.365934920101143,86.92202560193017,6.145834463785747,11.275317537897012,0.0,0.0,10.53729561533827,87.07685149080922,15.334910410935027))
targetgene="Idh3a"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(81.65354605788248,10.153417965809398,4.207208449806457,3.8356131030905076,9.313753562529,5.7143496427726435,13.226649843997507,0.0,0.0,0.0,35.32500495833328,0.0,0.0,15.87911954155281,26.808280407355202,32.26380585260746,38.08012550179798,40.38691219059206,12.991126728446558,15.324049077162249,190.00273675908983,0.0,47.3962609380354,0.0),c(271.7896604498088,56.47838743481478,19.45833908035486,12.46574258504415,152.40687647774726,31.688666200830113,23.146637226995637,5.084166505125159,31.014758071932118,45.87731788656276,785.9813603229155,687.0306935119669,25.65081034172088,71.45603793698766,88.58388308517371,86.35312742903763,181.7084249487969,50.04465206225537,69.12259881928168,296.2649488251368,65.2534651495864,9.878714639379627,328.46711068684994,56.228004840095096),c(208.79978206229947,18.403070063029535,41.54618344183876,109.31497343807946,131.23925474472682,68.57219571327173,148.79981074497195,79.31299747995249,11.076699311404328,132.23462214362206,2.94375041319444,83.45709075199598,34.201080455627846,14.478020758474623,50.119828587664074,29.891467186974563,82.36896711801955,49.16667571028598,37.99291779073993,8.513360598423471,1.9192195632231295,144.22923373494257,9.920147638193455,0.0),c(182.55399940083726,4.442120360041612,10.518021124516142,150.54781429630242,13.54727790913309,37.922502174763906,152.10647320597133,47.791165148176496,46.522137107898175,8.095997274099311,706.5000991666657,71.53464921599655,8.550270113906961,40.63186470926749,30.305012634401535,123.3616106129109,53.808872991671066,14.04762163151028,150.5009775710601,6.810688478738777,21.111415195454423,22.391753182593824,5.511193132329697,0.0))
targetgene="Fars2"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(287.5371300466861,34.26778563460672,44.701589779193604,29.726001548951434,27.09455581826618,20.779453246445975,9.91998738299813,8.134666408200255,19.938058760527788,313.04522793184003,41.21250578472216,0.0,0.0,113.0219685016406,53.616560814710404,64.05314397208835,44.28884161622157,164.1815778182764,66.18121163548246,14.472713017319903,42.22283039090885,24.367496110469748,145.495498693504,28.114002420047548),c(148.14286213358676,9.51882934294631,66.7894341406775,1.9178065515452538,88.9040112786859,3.636404318128046,0.0,0.0,50.95281683245991,5.397331516066207,444.5063123923604,0.0,37.05117049359683,10.274724409240054,52.45098340569496,50.768047444544095,42.63318398570861,82.5297770851229,25.001791062293375,45.1208111716444,44.14204995413198,0.0,18.73805664992097,38.337276027337566),c(144.06018483069266,0.0,11.043922180741948,0.0,8.46704869320818,4.155890649289195,13.226649843997507,0.0,19.938058760527788,0.0,52.98750743749992,4.4709155759997845,5.700180075937974,6.071428060005487,52.45098340569496,19.927644791316375,9.520031375449495,23.7053615031736,12.500895531146687,1.7026721196846943,1.9192195632231295,21.73317220663518,0.0,35.78145762551506),c(149.3093413629851,211.95260003627118,0.5259010562258071,5.753419654635762,0.0,3.636404318128046,16.533312304996883,75.24566427585236,0.0,10.794663032132414,47.10000661111104,482.8588822079767,14.250450189844933,61.1813135277476,10.490196681138993,8.065951463151865,3.7252296686541504,5.267858111816355,15.687398313595843,5.1080163590540835,46.06126951735511,15.147362447048762,61.725363082092606,0.0))
targetgene="Hmbs"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(122.48031908682371,9.51882934294631,19.45833908035486,8.630129481953642,13.54727790913309,3.1169179869668966,152.10647320597133,20.336666020500637,0.0,286.058570351509,5.88750082638888,23.84488307199885,22.800720303751895,72.39010379237311,34.384533565955586,65.00207943834151,72.43502133494181,21.949408799234813,36.52222419884032,1.7026721196846943,0.0,12.513038543214195,9.920147638193455,0.0),c(193.6355520801213,58.38215330340404,16.828833799225826,180.27381584525386,10.160458431849818,136.6249050953823,0.0,0.0,11.076699311404328,29.68532333836414,0.0,11.922441535999425,185.25585246798414,17.280218324631,53.616560814710404,24.1978543894556,31.04358057211792,59.70239193391869,167.1688382792557,92.79563052281584,19.192195632231297,47.41783026902221,65.03207896149043,15.334910410935027),c(85.73622336077659,0.6345886228630874,4.207208449806457,0.0,77.05014310819445,3.636404318128046,0.0,5.084166505125159,8.861359449123462,164.6186112400193,11.77500165277776,0.0,0.0,12.609889047703703,40.795209315540525,16.13190292630373,138.2474121478318,142.23216901904158,60.29843726788402,188.14526922515873,19.192195632231297,63.22377369202962,3.306715879397818,268.36093219136296),c(115.48144371043378,3.8075317371785244,78.88515843387106,7.671226206181015,127.85243526744354,81.03986766113931,36.37328707099314,5.084166505125159,6.646019586842597,43.178652128529656,2.94375041319444,38.747934991998136,11.400360151875947,24.285712240021947,53.03377211020268,30.840402653227724,31.04358057211792,81.65180073315351,39.95384257993941,21.28340149605868,155.4567846210735,13.171619519172836,112.42833989952582,0.0))
targetgene="Fxn"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(92.73509873716652,8.884240720083223,26.295052811290354,132.3286520566225,68.58309441498626,53.50709210959839,0.0,4.0673332041001276,15.507379035966059,16.191994548198622,0.0,0.0,0.0,45.30219398619479,59.44444785978762,51.716982910797256,16.556576305129557,0.8779763519693925,30.884565429891815,68.10688478738777,86.36488034504083,11.195876591296912,0.0,0.0),c(78.1541083696875,32.99860838888054,43.649787666741986,22.05477534277042,2.5401146079624546,4.155890649289195,6.613324921998753,0.0,0.0,24.287991822297933,61.81875867708324,1150.5156082239446,424.66341565737906,56.97801717851303,22.72875947580115,97.26588529094897,39.73578313231094,45.65477030240841,18.138554300095194,2.5540081795270417,7.676878252892518,8.561552687462344,48.49849956450133,0.0),c(95.65129681066233,8.884240720083223,112.0169249760969,0.0,1.6934097386416362,8.31178129857839,0.0,8.134666408200255,0.0,5.397331516066207,11.77500165277776,228.016694375989,0.0,1.4010987830781891,63.52396879134167,6.168080530645545,5.7948017067953455,20.19345609529603,19.854363490644737,22.134737555901026,3.838439126446259,0.0,61.725363082092606,2.5558184018225045),c(10.49831306458489,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.646019586842597,0.0,0.0,2.9806103839998563,250.80792334127085,2.335164638463649,7.576253158600384,0.0,0.0,0.0,8.824161551397662,7.662024538581124,0.0,0.0,52.90745407036509,0.0))
targetgene="Dnajc9"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(228.04668934737177,26.65272216024967,3.6813073935806493,20.136968791225165,95.67765023325245,258.7041929182524,115.73318613497818,56.94266485740179,11.076699311404328,2.6986657580331035,32.381254545138844,40.23824018399806,253.65801337923983,66.31867573236762,20.397604657770263,73.54249863461996,52.981044176414585,28.97321961498995,45.59150134888792,49.377491470856135,57.57658689669388,29.636143918138885,55.11193132329697,0.0),c(243.7941589442491,5.076708982904699,24.191448586387125,218.62994687615893,27.09455581826618,7.792294967417241,6.613324921998753,125.07049602607893,110.76699311404327,13.493328790165517,8.83125123958332,87.92800632799576,0.0,61.648346455440326,58.27887045077218,124.31054607916406,66.22630522051823,110.62502034814345,65.93609603683252,57.03951600943726,101.71863685082586,136.32626202343886,132.26863517591272,17.89072881275753),c(195.96851053891794,3.8075317371785244,266.6318355064842,1.9178065515452538,7.620343823887363,1.0389726623222988,16.533312304996883,27.45449912767586,59.81417628158337,24.287991822297933,26.49375371874996,438.1497264479789,17.100540227813923,29.890107372334704,27.391069111862926,14.23403199379741,2.8974008533976727,23.7053615031736,19.609247891994805,41.715466932275014,74.84956296570205,15.805943423007404,7.715670385261576,0.0),c(377.93927032505604,65.362628154898,214.56763094012928,10.547936033498896,23.70773634098291,3.636404318128046,6.613324921998753,9.151499709225288,2.2153398622808655,124.13862486952276,114.80626611458317,1333.8231468399358,34.201080455627846,95.74175017700959,105.48475551589765,102.01056262221478,69.95153488917238,100.96728047648014,115.69456256276933,5.1080163590540835,9.596097816115648,93.51849858612714,20.942533902852848,485.60549634627586))
targetgene="Hsd17b10"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@

\newpage\section{Comparison results of 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23 vs 0 pos.}

The following figure shows the distribution of RRA score in the comparison 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23 vs 0 pos., and the RRA scores of 10 genes.

<<echo=FALSE>>=
gstable=read.table('invivo.poolB_all_v_input.gene_summary.txt',header=T)
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=9
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("Cnot8","Cnot6l","Dcp1a","Dcp2","Zfp36l2","Vim","S100a8","Kmt2b","Lhcgr","Antxr2")
# samplelabel=sub('.\w+.\w+$','',colnames(gstable)[startindex]);
samplelabel='1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23_vs_0 pos.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))



# you need to write after this code:
# dev.off()




@
%%
\clearpage
\newpage
The following figures show the distribution of sgRNA read counts (normalized) of selected genes in selected samples.
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(224.5472516591768,1981.8202692014218,2561.6640448759063,1675.204022774779,1029.5931210941148,1483.6529617962426,1759.1444292516685,719.9179771257226,398.7611752105558,1567.924805417233,497.4938198298604,464.9752199039776,162.45513216423225,776.6757587530095,723.2407822940828,473.5187976603272,702.8266641527497,1281.845473875313,961.8336091023451,492.0722425888767,312.8327888053701,171.88963472520553,380.2723261307491,771.8571573503964),c(162.14061288636663,1128.2985714505694,989.7457878169689,1236.9852257466887,716.3123194454122,1210.4031516054781,119.03984859597756,73.2119976738023,478.513410252667,812.2983931679642,288.4875404930551,61.10251287199706,168.15531224017022,528.6812741481701,728.4858806346523,854.5163873609712,859.7002246438523,665.5060747927995,650.7819144155775,542.3010701195751,190.00273675908983,373.41541336854993,924.7782076049232,526.4985907754359),c(111.98200602223882,710.7392576066578,135.68247250625822,2699.3127212999448,887.3467030482174,834.2950478448059,13.226649843997507,11.185166311275351,354.4543779649385,164.6186112400193,229.61253222916633,247.39066187198807,1385.1437584529276,609.4779706390124,326.3616745243242,930.9056923943507,717.7275828273663,404.74709825788995,398.55796340479435,158.34850713067658,199.59883457520547,185.719835220337,503.7230522949343,493.27295155174335),c(150.47582059238343,1314.867626572317,601.1049072660975,596.4378375305739,2470.6848086781474,598.9677398288053,367.0395331709308,217.6023264193568,764.2922524868986,70.16530970886069,135.41251900694425,1198.2053743679423,4300.785867295202,557.1702827374266,507.60896162622566,591.6612632088458,864.6671975353912,512.7381895501252,469.64148701327554,683.6228560534048,307.07513011570074,527.5233617428721,362.63650810729405,2.5558184018225045))
targetgene="Cnot8"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(433.3470337214763,321.7364317915853,1053.3798156202915,2026.1626217075607,417.4255005751633,1931.4501792571534,882.8788770868335,390.4639875936123,660.1712789596979,5051.90229903797,7115.044748690962,5980.594735495712,1236.9390764785403,710.357083020642,794.9237929485325,765.7909212663008,795.5434914614752,1204.5835549020064,1145.6703080897964,555.0711110172103,819.5067534962762,1289.5015509270208,1154.0438419098386,1408.2559394042),c(309.70023540525426,1004.5537899922673,2248.2270153653253,1541.9164674423841,740.020055786395,775.5930924235961,2298.1304103945668,843.9716398507765,487.3747697017904,742.1330834591034,1663.2189834548587,812.2163296399608,4468.941179535372,1130.219685016406,704.0087550453279,705.0590514260984,660.1934801670411,649.7025004573504,720.639860030809,345.64244029599297,533.54303857603,462.3238451229666,1094.522956080678,1339.2488425549923),c(331.2801011491232,717.7197324581518,1149.6197089096142,1559.1767264062914,751.0272190875656,896.1139212529827,1775.6777415566653,852.1063062589767,657.9559390974171,10899.910996695706,4415.62561979166,384.4987395359815,302.1095440247126,831.318611293059,706.3399098633588,947.5120630537809,892.8133772541114,625.1191626022074,657.1549199804758,570.3951600943726,646.7769928061946,580.2098398195635,931.3916393637188,1622.9446851572905),c(401.8520945277216,670.7601743662833,1931.1086784611637,508.21873615949227,1026.2063016168315,885.7241946297597,4602.874145711132,2432.2652560518763,1065.5784737570964,2415.3058534396278,556.3688280937491,1393.4353545199328,185.25585246798414,1034.0109019117037,670.7897988883877,692.2484226316808,1218.9779304651636,900.8037371205967,1005.9544168593334,832.6066665258155,1558.406285337181,839.6907443472684,1512.2713955112688,485.60549634627586))
targetgene="Cnot6l"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(526.0821324586428,1201.9108517026875,1143.3088962349045,2305.203474957395,446.2134661320712,338.1856015859083,3802.661830149283,2892.890741416216,427.56059342020706,2191.31659552288,4983.7694495381875,3630.383447711825,1698.6536626295162,719.2307086468038,758.208104564546,873.969564419161,741.7346184698042,1080.7888892743222,614.5048058153872,847.0793795431355,1097.7935901636301,1857.8569331793287,876.2797080404218,907.3155326469891),c(274.7058585233046,944.267870820274,195.63519291600022,473.6982182316777,272.63896792130345,243.1196029834179,317.43959625594016,257.25882515933307,367.74641713862366,345.42921702823725,615.243836357638,137.10807766399338,59.85189079734872,386.2362312018875,331.02398416038596,208.29133484256877,212.75200552091482,419.67269624136964,241.68398026883594,395.0199317668491,370.409375702064,597.9915261704468,579.7775175210842,255.58184018225046),c(501.00282902657887,730.4115049154136,625.8222569087104,1627.258858986148,707.845270752204,487.7976649603193,1167.25184873278,811.4329742179755,1940.637719358038,1217.0982568729296,21365.740498965246,1521.6016010319267,7800.696433921117,595.9340157359231,768.1155125411773,730.2058412818071,846.4549635997487,602.2917774510032,440.7178463725832,832.6066665258155,817.5875339330531,1439.658013445591,538.9946883418444,495.8287699535659),c(179.63780132734144,121.84101558971278,668.9461435192266,1459.4507857259382,683.2908295419003,1058.1936565752612,56.2132618369894,1280.1931259905152,206.0266071921205,1732.5434166572525,2107.725295847219,104.32136343999497,510.16611679644865,131.23625268165705,244.77125589324316,334.9742195873657,478.071140810616,259.88100018294017,539.2543170298571,313.29167002198375,182.3258585061973,1049.778075678075,330.67158793978183,393.5960338806657))
targetgene="Dcp1a"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(298.6186827259702,779.9094174987343,358.6645203460004,1899.5873893055739,229.4570195859417,197.40480584123677,4149.861388554218,1723.532445237429,1803.2866478966246,4846.803701427454,37853.68656326731,7862.850192991621,26237.928889542494,339.99997136030726,555.3976353958589,321.2146553266949,365.07250752810677,325.7292265806446,310.5614634894677,791.7425356533829,2911.4560774094875,2372.208675403028,1178.2930916920893,769.3013389485739),c(88.6524214342724,199.26082757900943,45.753391891645215,311.64356462610374,69.42979928430708,231.1714173667115,171.9464479719676,518.5849835227663,84.1829147666729,2.6986657580331035,29.4375041319444,95.3795322879954,0.0,143.37910880166802,145.11438742242274,128.58075567730327,215.23549196668426,179.98515215372547,114.46898456951966,72.36356508659951,147.77990636818097,176.49970155691602,297.60442914580364,398.7076706843107),c(228.62992896207092,493.70994858748196,465.42243475983923,812.191074579415,645.1891104224634,261.30162457405817,949.0121263068211,318.268823220835,268.05612333598475,4404.2225171100245,76.53751074305544,400.8920966479807,715.3725995302157,343.7362347818491,463.8998087881466,211.61260897445484,249.17647339219985,438.11019963272685,317.9149314489658,271.57620308970877,483.64332993222865,1442.9509183253842,255.71936134009795,0.0),c(175.5551240244473,874.4631223053344,289.2455809241939,1619.587632779967,379.32378145572653,185.45662022453033,102.50653629098068,42.70699864305134,398.7611752105558,728.6397546689379,232.55628264236077,1383.0032181759334,8.550270113906961,216.7032784494266,324.61330841080104,340.19336465175815,183.36408257930987,412.6488854256145,294.87406517587186,646.1640694203415,226.46790846032928,154.76652935028082,450.8155982245692,516.2753171681459))
targetgene="Dcp2"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(193.6355520801213,1507.7825679226955,220.87844361483897,60.410906373675495,2323.358161416325,541.3047570699176,416.63947008592146,211.50132661320663,33.230097934212985,37.781320612463446,179.56877520486086,472.4267458639772,119.70378159469745,240.0549248340631,113.64379737900575,285.1551076090748,364.24467871285026,85.16370614103107,354.92738684510596,214.5366870802715,416.4706452194191,939.1364717170233,321.8536789280543,204.46547214580036),c(201.21766707121037,250.6625060309195,151.45950419303244,118.90400619580574,49.10888242060745,1636.3819431576205,234.77303473095574,284.7133242870089,79.75223504211115,29.68532333836414,1536.6377156874978,157.9723503519924,19.95063026578291,394.64282390035663,187.0751741469787,207.34239937631563,175.91362324200156,446.0119868004514,313.9930818705668,217.94203131964088,122.83005204628029,1484.4415198107788,315.2402471692587,1277.9092009112524),c(147.5596225188876,2819.477251380697,356.5609161210972,176.43820274216336,144.7865326538599,37.40301584360276,29.75996214899439,1081.9106322906339,1674.7969358843343,809.599727409931,874.2938727187487,2630.388663879873,364.8115248600303,382.4999677803457,54.78213822372585,87.30206289529079,247.10690135405866,79.89584802921472,167.41395387790564,477.5995295715568,197.67961501198235,448.4936446278351,154.31340770523153,787.1920677613314),c(296.2857242671735,416.2901365981853,829.3459656680977,170.6847830875276,850.0916887981014,794.2946003453974,2764.369817395479,684.3288115898465,983.6108988527043,774.5170725555007,244.33128429513852,2153.4910024398964,11.400360151875947,424.06589834499863,491.8736666045172,566.514473353137,432.12664156388144,626.8751153061462,340.95579772205963,515.05831620462,374.24781482851023,377.3668992243018,855.3371741375689,1012.1040871217118))
targetgene="Zfp36l2"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(46.07592956123368,67.90098264635034,17.88063591167744,116.02729636848785,93.13753562529,11.948185616706436,538.9859811428984,158.62599495990497,12532.177600922856,110.64529607935724,214.89378016319412,594.6317716079714,684.0216091125568,83.59889405699863,29.13943522538609,50.768047444544095,71.60719251968534,67.60417910164323,30.394334232591945,153.2404907716225,523.9469407599144,28.977562942180242,1140.8169783922472,654.2895108665612),c(153.97525828057837,319.83266592299606,309.75572211700035,96.84923085303532,27.941260687586997,203.1191554840094,46.29327445399127,49.824831750226565,50.95281683245991,118.74129335345656,50.04375702430548,10.432136343999497,37.05117049359683,185.87910522170645,210.38672232728757,199.27644791316376,126.65780873424112,43.89881759846963,131.13684527771525,328.615719099146,44.14204995413198,61.90661174011233,113.53057852599176,342.4796658442156),c(109.64904756344218,137.07114253842687,19066.542793466637,127.53413567775938,194.74211994378817,187.53456554917494,1299.518347172755,267.4271581695834,731.0621545526857,245.57858398101243,144.24377024652756,460.5043043279778,2587.88175447584,331.1263457341454,9804.254375933404,2821.6596089037735,12738.215894759054,1135.2234230964245,1571.4361029447336,103.01166324092401,82.52644121859457,394.49000459922644,623.8670625797217,1888.7497989468309),c(263.0410662293214,1832.0573542057332,286.09017458683905,135.20536188394038,130.392549875406,45.71479714218115,56.2132618369894,284.7133242870089,6.646019586842597,48.575983644595865,671.1750942083323,61.10251287199706,125.40396167063543,231.18129920790122,250.59914293832037,147.08499726923992,284.7731124482284,223.8839697521951,207.85802765514492,152.38915471178015,49.89970864380137,235.11340841723515,276.6618952429508,314.3656634241681))
targetgene="Vim"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(247.29359663244406,807.1967282818472,238.2331784702906,571.5063523604856,469.0744976037332,107.53367055035793,274.45298426294823,185.0636607865558,206.0266071921205,213.19459488461519,76.53751074305544,20.864272687998994,79.80252106313164,278.81865783255967,301.8845489349999,287.0529785415811,311.2636345364357,646.1905950494729,240.7035178742362,224.75271979837964,84.4456607818177,1129.4663737690707,744.0110728645091,148.23746730570525),c(682.973588812717,1648.661242198301,1095.9778011745818,2240.956955480629,517.3366751550199,725.2029183009646,5227.833350840015,2133.316265550517,5724.438204133757,2906.4630214016524,291.43129090624956,2701.9233130958696,10756.239803294957,1197.4724266041592,1046.6885132958685,1045.2524160778564,1116.7410717809887,976.3097033899645,648.5758740277281,1106.7368777950512,2132.2529347408968,922.6719473180573,716.4551072028606,1114.336823194612),c(376.1895514809585,562.8801084795585,431.7647671613876,625.2049358037527,551.2048699278525,887.2826536232432,1861.6509655426491,1206.9811283167128,230.39534567721,404.7998637049655,4236.056844586799,1005.9560045999515,9827.110450917067,470.3021581865789,211.552299736303,551.8059736262129,470.6206814733077,707.6489396873303,702.011074533414,718.527634506941,437.5820604148735,1003.6774073609702,804.6341973201357,661.9569660720286),c(246.7103570177449,235.43237908220541,258.74331966309705,190.82175187875276,237.07736340982908,1448.8473776084456,1068.0519749027987,520.6186501248163,793.0916706965498,483.06117068792554,341.47504793055504,61.10251287199706,407.5628754295651,232.58239799097942,217.38018678138022,215.88281857259406,272.76959462700944,261.636952886879,343.406953708559,414.6006611432231,287.8829344834694,335.87629773890734,58.418647202694785,345.0354842460381))
targetgene="S100a8"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(185.47019747433305,486.0948851131249,43.649787666741986,834.2458499221854,586.766474439327,1291.4430192666173,849.8122524768398,1172.4087960818617,556.0503054324972,32.383989096397244,206.0625289236108,174.36570746399158,914.8789021880448,142.44504294628257,233.11548180308873,241.5040761614294,195.78151480815703,343.2887536200325,294.383833978572,372.88519421094804,268.6907388512381,845.6179731308961,235.87906606371104,628.7313268483362),c(124.81327754562035,8.884240720083223,351.82780661506496,11.506839309271523,7.620343823887363,487.2781786291581,89.27988644698317,40.673332041001274,132.92039173685194,134.93328790165518,556.3688280937491,4470.915575999785,17.100540227813923,131.7032856093498,129.96188110522195,103.43396582159451,111.75689005962451,44.776793950439014,206.63244966189524,337.98041575741183,274.44839754090754,341.1449455465765,220.4477252931879,51.11636803645009),c(217.54837628278688,230.99025872216382,196.16109397222604,169.72587981175496,125.31232065948109,92.46856694668459,228.159709808957,79.31299747995249,68.67553573070683,1225.194254147029,85.36876198263876,265.2743241759872,1818.3574442242136,335.32964208337995,244.77125589324316,132.37649754231592,231.7920682718138,227.39587516007265,217.66265160114233,125.14640079682503,364.6517170123946,479.44695049789124,649.2185509884383,1055.5529999526943),c(124.23003793092118,208.14506829909266,326.5845559162262,295.3422089379691,157.48710569367216,117.40391084241976,423.2527950079202,473.84431827766485,183.87320856931183,4223.411911321807,73.593760329861,506.7037652799756,521.5664769483246,274.6153614833251,207.47277880474897,264.75299508463183,184.60582580219457,115.01490210799042,173.54184384415402,162.6051874298883,408.79376696652656,1217.7162245475288,491.59842740380896,536.7218643827259))
targetgene="Kmt2b"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(433.3470337214763,212.58718865913426,478.5699611654844,1417.2590415919426,499.5558728992827,430.1346822014317,410.0261451639227,751.4398094574985,387.6844758991515,1195.508930808665,3977.0068082256885,4035.7464599358054,230.85729307548795,494.1208374989081,461.5686539701157,623.9250690614532,438.7492720859333,539.9554564611764,504.69301762021627,542.3010701195751,587.2811863462777,349.0479172580802,525.7678248242531,1799.296154883043),c(143.47694521599348,788.1590695959545,41.54618344183876,158.21904050248344,204.05587350631717,256.6262475936078,558.8259559088947,417.9184867212881,733.2774944149664,62.06931243476138,367.968801649305,494.78132374397615,22.800720303751895,198.48899426941014,364.82572902183387,175.07859352370815,281.04788277957425,359.09232795548155,122.80291492361745,161.75385137004596,168.8913215636354,705.3402252517054,231.47011155784728,171.2398329221078),c(365.1079988016745,362.98469227768595,1118.5915465922917,385.47911686059604,252.3180510576038,1437.9381646540614,2602.3433568065093,1212.065294821838,3726.2016483564157,1200.906262324731,886.0688743715265,9962.69020851952,159.60504212626327,389.9724946234293,602.0207317564766,428.9188307464286,462.34239332074293,330.997084692461,469.1512558159757,427.3707020408583,2658.1190950640344,723.7804925785474,467.3491776215583,812.7502517795565),c(452.59394100654856,1167.6430660680808,1093.8741969496787,1232.1907093678255,418.27220544448414,609.3574664520282,621.6525426678828,690.4298113959967,2365.982972915964,1017.39699077848,1995.8627801458304,527.5680379679745,3035.345890436971,643.1043414328889,764.618780314131,519.0677000404789,589.4141164626122,792.8126458283614,702.5013057307139,1070.9807632816728,3093.7819359156847,560.4524105408042,326.26263343391804,1024.8831791308244))
targetgene="Lhcgr"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(537.1636851379268,350.29291982042423,594.7940945913878,294.38330566219645,701.0716317976375,1500.2765243933995,1157.3318613497818,2145.5182651628174,841.8291476667289,404.7998637049655,909.618877677082,1156.4768289919443,2385.525361780042,592.1977523143813,558.3115789183975,364.8656867743403,521.5321536115811,502.2024733264925,677.9897458657204,408.6413087243266,393.4400104607415,941.1122146448992,684.4901870353484,912.4271694506341),c(132.9786321514086,323.00560903731144,165.65883271112924,161.09575032980132,21.167621733020454,168.31357129621242,257.9196719579514,74.22883097482733,86.39825462895375,0.0,2.94375041319444,40.23824018399806,718.2226895681847,144.31317465705348,160.2668937396235,68.79782130335416,69.53762048154414,283.5863616861138,111.28248178707051,62.14753236849134,86.36488034504083,61.24803076415369,222.65220254611975,99.67691767107767),c(269.45670199101215,451.8270994785182,736.7873797723557,691.369261832064,535.9641822800779,566.759587296814,138.87982336197382,116.93582961787867,1575.1066420816953,1489.6634984342732,712.3875999930546,444.11094721597857,34.201080455627846,346.5384323480055,396.2963190652508,310.77636519791014,394.04651606208347,172.9613413379703,544.6468602001556,585.7192091715349,454.8550364838817,622.3590222809165,178.56265748748217,679.8476948847862),c(305.034318487661,840.8299252935908,499.0801023582909,927.2594676721302,276.87249226790755,501.3043095705092,925.8654890798255,548.0731492524922,1242.8056627395656,569.4184749449848,285.5437900798607,754.0944271519636,5064.6099974708895,502.5274301973772,564.1394659634747,428.44436301330205,296.3627158618191,268.6607637026341,321.1014342314149,647.0154054801839,917.3869512206559,230.50334158552465,553.3237904859016,610.8405980355786))
targetgene="Antxr2"
collabel=c("In.vivo.input_Pool.B..9.16._1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._BM_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._BM_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1836_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1840_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1841_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1842_Pool.B..9.16._BM_mCD19_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1830_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1831_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1832_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1833_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1834_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1835_Pool.B..9.16._SP_hEGFRv3_15m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1844_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1845_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1846_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1848_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417","In.vivo_AR1843_Pool.B..9.16._SP_mCD19_10m_1410..1411..1412..1413..1414..1415..1416..1417")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%__INDIVIDUAL_PAGE__









\end{document}

